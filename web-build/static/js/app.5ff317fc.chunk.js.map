{"version":3,"sources":["src/signs/rock.png","src/signs/paper.png","src/signs/scissors.png","src/PlayScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","rock","require","paper","scissors","bgColors","randomImage","emoji","Math","floor","random","length","styles","StyleSheet","create","container","flex","alignItems","justifyContent","counter","fontSize","color","sign","width","height","button","position","bottom","PlayScreen","useState","setCounter","useEffect","console","log","timeout","setTimeout","prev","clearTimeout","View","style","compose","backgroundColor","Image","source","Button","title","onPress","Text","App","play","setPlay","header","StatusBar","margin","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,qJCGrCC,EAAOC,EAAQ,KACfC,EAAQD,EAAQ,KAChBE,EAAWF,EAAQ,KAEnBG,EAAW,CAAC,OAAQ,SAAU,SAE9BC,EAAc,WAClB,IAAMC,EAAQ,CAACN,EAAMG,EAAUD,GAE/B,OAAOI,EADQC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UAmC5CC,EAASC,IAAWC,OAAO,CAChCC,UAAW,CACVC,KAAM,EACNC,WAAY,SACZC,eAAgB,UAEjBC,QAAS,CACNC,SAAU,IACVC,MAAO,SAEVC,KAAM,CACLC,MAAO,IACPC,OAAQ,KAERC,OAAQ,CACNC,SAAU,WACVC,OAAQ,MAGGC,EAlDI,WAAO,IAAD,EACMC,mBAAS,GADf,WACjBV,EADiB,KACRW,EADQ,KAcxB,OAXAC,qBAAU,WAET,GADAC,QAAQC,IAAId,GACI,IAAZA,EAAJ,CACA,IAAIe,EAAUC,YAAW,WACxBL,GAAW,SAACM,GAAD,OAAUA,EAAO,OAC1B,KACH,OAAO,WACNC,aAAaH,OAEZ,CAACf,IAGH,kBAACmB,EAAA,EAAD,CAAMC,MAAO1B,IAAW2B,QAAQ,CAACC,gBAAiBpC,EAASc,EAAQ,IAAKP,EAAOG,YAC7EI,EAAU,EACV,oCACC,kBAACuB,EAAA,EAAD,CAAOC,OAAQrC,IAAeiC,MAAO3B,EAAOU,OACvC,kBAACgB,EAAA,EAAD,CAAMC,MAAO3B,EAAOa,QAClB,kBAACmB,EAAA,EAAD,CAAQC,MAAM,aAAaC,QAAS,kBAAMhB,EAAW,QAK7D,kBAACiB,EAAA,EAAD,CAAMR,MAAO3B,EAAOO,SAAUA,KCnCnB,SAAS6B,IAAO,IAAD,EACLnB,oBAAS,GADJ,WACtBoB,EADsB,KAChBC,EADgB,KAE7B,OAAOD,EACN,kBAAC,EAAD,MAEA,kBAACX,EAAA,EAAD,CAAMC,MAAO3B,EAAOG,WACnB,kBAACgC,EAAA,EAAD,CAAMR,MAAO3B,EAAOuC,QAApB,uBACA,kBAACJ,EAAA,EAAD,CAAMR,MAAO,CAAEnB,SAAU,KAAzB,8BACA,kBAACkB,EAAA,EAAD,CAAMC,MAAO3B,EAAOa,QACnB,kBAACmB,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS,kBAAMI,GAAQ,OAE7C,kBAACE,EAAA,UAAD,CAAWb,MAAM,UAKpB,IAAM3B,EAASC,IAAWC,OAAO,CAChCC,UAAW,CACVC,KAAM,EACNyB,gBAAiB,OACjBxB,WAAY,SACZC,eAAgB,UAEjBiC,OAAQ,CACP/B,SAAU,IAEXK,OAAQ,CACP4B,OAAQ,GACR9B,MAAO,Q,4DC/BL,kBAAmB+B,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACf/B,QAAQ6B,KAAK,oCAAqCE,W","file":"static/js/app.5ff317fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Button, Image } from \"react-native\";\r\n\r\nconst rock = require(\"./signs/rock.png\");\r\nconst paper = require(\"./signs/paper.png\");\r\nconst scissors = require(\"./signs/scissors.png\");\r\n\r\nconst bgColors = [\"pink\", \"purple\", \"green\"]\r\n\r\nconst randomImage = () => {\r\n  const emoji = [rock, scissors, paper];\r\n  const random = Math.floor(Math.random() * emoji.length)\r\n  return emoji[random];\r\n}\r\n\r\nconst PlayScreen = () => {\r\n\tconst [counter, setCounter] = useState(3);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(counter);\r\n\t\tif (counter === 0) return;\r\n\t\tlet timeout = setTimeout(() => {\r\n\t\t\tsetCounter((prev) => prev - 1);\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(timeout);\r\n\t\t};\r\n\t}, [counter]);\r\n\r\n\treturn (\r\n\t\t<View style={StyleSheet.compose({backgroundColor: bgColors[counter-1]}, styles.container)}>\r\n\t\t\t{counter < 1 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Image source={randomImage()} style={styles.sign} />\r\n          <View style={styles.button}>\r\n            <Button title=\"Play again\" onPress={() => setCounter(3)} />\r\n          </View>\r\n\t\t\t\t\t\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Text style={styles.counter}>{counter}</Text>\r\n\t\t\t)}\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tcounter: {\r\n    fontSize: 150,\r\n    color: \"white\"\r\n\t},\r\n\tsign: {\r\n\t\twidth: 200,\r\n\t\theight: 200,\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    bottom: 40\r\n  }\r\n});\r\nexport default PlayScreen;\r\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport PlayScreen from \"./src/PlayScreen\";\n\nexport default function App() {\n\tconst [play, setPlay] = useState(false);\n\treturn play ? (\n\t\t<PlayScreen />\n\t) : (\n\t\t<View style={styles.container}>\n\t\t\t<Text style={styles.header}>Rock Paper Scissors</Text>\n\t\t\t<Text style={{ fontSize: 65 }}>✊ ✋ ✌️</Text>\n\t\t\t<View style={styles.button}>\n\t\t\t\t<Button title=\"Play\" onPress={() => setPlay(true)} />\n\t\t\t</View>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\theader: {\n\t\tfontSize: 30,\n\t},\n\tbutton: {\n\t\tmargin: 20,\n\t\twidth: 250,\n\t},\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}